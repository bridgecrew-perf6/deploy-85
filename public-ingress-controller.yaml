apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ingress
  namespace: kube-devops
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      - "ingress-controller-leader-private"
      - "ingress-controller-leader-public"
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress-controller-public
  namespace: kube-devops
spec:
  revisionHistoryLimit: 2
  replicas: 2
  strategy:
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      name: nginx-ingress-controller-public
      phase: prod
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/nginx-ingress-controller-public: runtime/default
      labels:
        name: nginx-ingress-controller-public
        phase: prod
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - key: name
                      operator: In
                      values:
                        - nginx-ingress-controller-public
      serviceAccountName: ingress
      containers:
        - name: nginx-ingress-controller-public
          image: nexus.bmwgroup.net/ingress-nginx/controller:v1.1.3
          args:
            - /nginx-ingress-controller
            - --configmap=$(POD_NAMESPACE)/ingress-controller
            - --election-id=ingress-controller-leader-public
            - --ingress-class=public
            - --http-port=80
            - --https-port=8443
          # use downward API
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 8443
            - name: health
              containerPort: 10254
          livenessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 20m
              memory: 128Mi
          lifecycle:
            preStop:
              exec:
                command:
                  - /wait-shutdown
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 101 # www-data
            seccompProfile:
              type: RuntimeDefault
      restartPolicy: Always
      terminationGracePeriodSeconds: 300
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: public
  namespace: kube-devops
spec:
  controller: k8s.io/ingress-nginx
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: nginx-ingress-controller-public
  namespace: kube-devops
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nginx-ingress-controller-public
  minReplicas: 2
  maxReplicas: 6
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 100m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-ingress-controller-public
  namespace: kube-devops
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
    prometheus.io/port: "10254"
    prometheus.io/scrape: "true"
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  selector:
    name: nginx-ingress-controller-public
    phase: prod
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
    - name: https
      protocol: TCP
      port: 443
      targetPort: 8443
